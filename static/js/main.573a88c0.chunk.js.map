{"version":3,"sources":["index.js"],"names":["scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","TemperatureInput","props","handleChange","bind","event","this","onTemperatureChange","target","value","scale","onChange","React","Component","BoilingVerdict","Calculater","state","handleCelsiusChange","handleFahrenheitChange","setState","ReactDOM","render","document","getElementById"],"mappings":"iLAGMA,EAAa,CACjBC,EAAG,UACHC,EAAG,cAGL,SAASC,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAQ,EAG/B,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAY,EAAK,GAG3B,SAASC,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,W,IAGXC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,gDAKnB,SAAaC,GACXC,KAAKJ,MAAMK,oBAAoBF,EAAMG,OAAOC,S,oBAG9C,WACE,IAAMC,EAAQJ,KAAKJ,MAAMQ,MACnBnB,EAAce,KAAKJ,MAAMX,YAE/B,OACE,qCACE,2DAA8BR,EAAW2B,MACzC,uBACED,MAAOlB,EACPoB,SAAUL,KAAKH,sB,GAnBMS,IAAMC,WA0BrC,SAASC,EAAeZ,GACtB,OAAIA,EAAMb,SAAW,IACZ,4DAEA,gE,IAIL0B,E,kDACJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDc,MAAQ,CAACzB,YAAa,GAAImB,MAAO,KAEtC,EAAKO,oBAAsB,EAAKA,oBAAoBb,KAAzB,gBAC3B,EAAKc,uBAAyB,EAAKA,uBAAuBd,KAA5B,gBALb,E,uDAQnB,SAAoBb,GAClBe,KAAKa,SAAS,CAACT,MAAO,IAAKnB,kB,oCAG7B,SAAuBA,GACrBe,KAAKa,SAAS,CAACT,MAAO,IAAKnB,kB,oBAG7B,WACE,IAAMmB,EAAQJ,KAAKU,MAAMN,MACnBnB,EAAce,KAAKU,MAAMzB,YACzBF,EAAoB,MAAVqB,EAAgBpB,EAAWC,EAAaL,GAAaK,EAC/DJ,EAAuB,MAAVuB,EAAgBpB,EAAWC,EAAaH,GAAgBG,EAE3E,OACE,gCACE,cAACU,EAAD,CACES,MAAM,IACNnB,YAAaF,EACbkB,oBAAqBD,KAAKW,sBAC5B,cAAChB,EAAD,CACES,MAAM,IACNnB,YAAaJ,EACboB,oBAAqBD,KAAKY,yBAC5B,cAACJ,EAAD,CAAgBzB,QAASK,WAAWL,Y,GAjCnBuB,IAAMC,WAuC/BO,IAASC,OACP,cAACN,EAAD,IACAO,SAASC,eAAe,W","file":"static/js/main.573a88c0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5/9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9/5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.onTemperatureChange(event.target.value);\n  }\n\n  render() {\n    const scale = this.props.scale;\n    const temperature = this.props.temperature;\n\n    return (\n      <fieldset>\n        <legend>Input temperature in {scaleNames[scale]}</legend>\n        <input \n          value={temperature}\n          onChange={this.handleChange}\n        />\n      </fieldset>\n    );\n  };\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would be boiling.</p>;\n  } else {\n    return <p>The water would not be boiling.</p>\n  }\n}\n\nclass Calculater extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {temperature: 37, scale: 'c'};\n\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput \n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput \n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Calculater />,\n  document.getElementById('root')\n);"],"sourceRoot":""}